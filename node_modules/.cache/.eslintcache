[{"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\index.js":"1","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\reportWebVitals.js":"2","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\App.js":"3","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\not-found.js":"4","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\modify.js":"5","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\user-info.js":"6","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\signup.js":"7","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\login.js":"8","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\user.js":"9","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\signup-progress.js":"10","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\home\\home.js":"11","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\search\\search.js":"12","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\search\\search-query.js":"13","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\order.js":"14","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\detail.js":"15","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\cart.js":"16","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\history.js":"17","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\order-return.js":"18","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\order-detail.js":"19","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\order-review.js":"20","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\order-progress.js":"21","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\like-list.js":"22","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\top-purchase.js":"23","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\recent-view.js":"24","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\coupon.js":"25","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\pet\\register.js":"26","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\pet\\modify.js":"27","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\payment\\list.js":"28","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\payment\\add.js":"29","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\service\\service.js":"30","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\user-non.js":"31","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\header-main.js":"32","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\navigation.js":"33","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\header.js":"34","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\header-search.js":"35","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\user-rate.js":"36","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\header-detail.js":"37","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\home\\main-product.js":"38","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\custom-select.js":"39","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\custom-selectcheck.js":"40"},{"size":572,"mtime":1637303600000,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1637283476000,"results":"43","hashOfConfig":"42"},{"size":3537,"mtime":1638446954000,"results":"44","hashOfConfig":"42"},{"size":673,"mtime":1638423958000,"results":"45","hashOfConfig":"42"},{"size":3110,"mtime":1638256842000,"results":"46","hashOfConfig":"42"},{"size":4842,"mtime":1638749896000,"results":"47","hashOfConfig":"42"},{"size":2832,"mtime":1641434826630,"results":"48","hashOfConfig":"42"},{"size":5330,"mtime":1641964238757,"results":"49","hashOfConfig":"42"},{"size":5135,"mtime":1641961074313,"results":"50","hashOfConfig":"42"},{"size":1862,"mtime":1641435601574,"results":"51","hashOfConfig":"42"},{"size":16170,"mtime":1642326903618,"results":"52","hashOfConfig":"42"},{"size":2519,"mtime":1637756590000,"results":"53","hashOfConfig":"42"},{"size":2485,"mtime":1637756828000,"results":"54","hashOfConfig":"42"},{"size":8336,"mtime":1642326196667,"results":"55","hashOfConfig":"42"},{"size":18710,"mtime":1641953560450,"results":"56","hashOfConfig":"42"},{"size":4127,"mtime":1638315016000,"results":"57","hashOfConfig":"42"},{"size":3986,"mtime":1638447566000,"results":"58","hashOfConfig":"42"},{"size":2656,"mtime":1638344416000,"results":"59","hashOfConfig":"42"},{"size":3268,"mtime":1638340350000,"results":"60","hashOfConfig":"42"},{"size":2240,"mtime":1638362582000,"results":"61","hashOfConfig":"42"},{"size":2277,"mtime":1638336350000,"results":"62","hashOfConfig":"42"},{"size":2239,"mtime":1638410026000,"results":"63","hashOfConfig":"42"},{"size":1187,"mtime":1638410126000,"results":"64","hashOfConfig":"42"},{"size":1155,"mtime":1638409996000,"results":"65","hashOfConfig":"42"},{"size":1835,"mtime":1638749318000,"results":"66","hashOfConfig":"42"},{"size":4682,"mtime":1638750576000,"results":"67","hashOfConfig":"42"},{"size":5072,"mtime":1638752542000,"results":"68","hashOfConfig":"42"},{"size":3288,"mtime":1638274178000,"results":"69","hashOfConfig":"42"},{"size":3056,"mtime":1638751150000,"results":"70","hashOfConfig":"42"},{"size":10924,"mtime":1638507600000,"results":"71","hashOfConfig":"42"},{"size":1101,"mtime":1641961074299,"results":"72","hashOfConfig":"42"},{"size":172,"mtime":1639974097731,"results":"73","hashOfConfig":"42"},{"size":1276,"mtime":1641280386092,"results":"74","hashOfConfig":"42"},{"size":315,"mtime":1641959899560,"results":"75","hashOfConfig":"42"},{"size":531,"mtime":1637756686000,"results":"76","hashOfConfig":"42"},{"size":1359,"mtime":1641546823275,"results":"77","hashOfConfig":"42"},{"size":501,"mtime":1641960389096,"results":"78","hashOfConfig":"42"},{"size":3651,"mtime":1641887680431,"results":"79","hashOfConfig":"42"},{"size":1520,"mtime":1642326903624,"results":"80","hashOfConfig":"42"},{"size":1979,"mtime":1642327465946,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"p8abzw",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\index.js",[],["170","171"],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\reportWebVitals.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\App.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\not-found.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\modify.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\user-info.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\signup.js",["172","173","174","175","176","177"],"import { useState } from \"react\";\nimport Navigation from \"../components/navigation\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\n\nimport \"./user.css\";\n\nfunction SignUp() {\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [phoneNum, setPhoneNum] = useState(\"\");\n\n  function PhoneNumValidCheck(){\n    // 서버에 PhoneNum 저장 되어있으면, type도 같이\n    if(phoneNum === \"01027803084\"){\n        console.log(\"duplicate\");\n        navigate(\"/signup-progress\", {state:{isDuplicate:true, duplicateType:\"카카오\"}});\n    }\n    // 새로운 유저\n    else{\n        onClickCertification();\n    }\n  }\n\n\n  function onClickCertification(){\n    const { IMP } = window;\n    IMP.init(process.env.REACT_APP_IAMPORT);\n    console.log(IMP);\n    const data = {\n        merchant_uid: \"123123123\",\n        company: 'Petkit',\n        carrier: 'SKT',\n        name: '신채호',\n        phone: '01027803084',\n        popup: true\n    };\n    console.log(data);\n    IMP.certification(data, callback);\n  }\n\n  function callback(response){\n    const {\n        success,\n        error_code,\n        error_msg,\n        imp_uid,\n        merchant_uid\n    } = response;\n\n    if (response.success){\n        console.log(response);\n        navigate(\"/signup-progress\", {replace: true, state:{isDuplicate:false}});\n    }\n    else{\n        alert('본인인증 실패: '+ response.error_msg);\n    }\n  }\n  /**\n                <Form.Group className=\"mb-3\" controlId=\"signupForm.birthday\">\n                  <Form.Label>출생연도</Form.Label>\n                  <Form.Control type=\"input\" size=\"lg\" placeholder=\"출생연도를 선택해주세요.\" required />\n                </Form.Group>\n  **/\n  return (\n    <>\n      <Navigation title=\"본인인증\" />\n      <div className=\"signup-wrap\">\n        <Row>\n          <Col xs={12}>\n            <Form>\n              <Form.Group className=\"mb-4\" controlId=\"signupForm.name\">\n                <Form.Label className=\"mb-0\">이름</Form.Label>\n                <Form.Control type=\"input\" size=\"lg\" placeholder=\"이름을 입력해주세요.\" onChange= {(e) => {setName(e.target.value);}} required />\n              </Form.Group>\n              <Form.Group className=\"mb-5\" controlId=\"signupForm.phone\">\n                <Form.Label>휴대폰</Form.Label>\n                <Form.Control type=\"input\" size=\"lg\" placeholder=\"휴대폰 번호를 입력해주세요.\" onChange= {(e) => {setPhoneNum(e.target.value);}} required />\n              </Form.Group>\n              <Button variant=\"primary\" className=\"w-100 mt-5 text-neom text-xsmallmedium text-black\" size=\"lg\" onClick={() => PhoneNumValidCheck()} >인증하기</Button>\n            </Form>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default SignUp;","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\login.js",["178","179","180","181","182"],"import { useState, useEffect, useRef} from \"react\";\nimport ReactDOM from 'react-dom';\nimport Navigation from \"../components/navigation\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport axios from 'axios';\nimport queryString from \"query-string\";\n\nimport \"./user.css\";\n\nfunction Login() {\n  const navigate = useNavigate();\n  const naverRef = useRef();\n  const location = useLocation();\n  const [showMethod, setShowMethod] = useState(false);\n  // ID로 먼저 회원 여부 check -> 없으면 전화번호 입력으로 -> 전화번호 입력시 다시 회원정보 check (signup에 넘기는 type, 이미 가입한 계정 type 같을때만 id값 바꾸는걸로 처리해주기)\n  //네이버 로긴 관련\n  const initializeNaverLogin = () => {\n    const naverLogin = new window.naver.LoginWithNaverId({\n        clientId: process.env.REACT_APP_NAVER_LOGIN_CLIENTID,\n        callbackUrl: \"http://localhost:3000/login\",\n        isPopup: false,\n        loginButton: {\n            color: \"green\",\n            type: 3,\n            height: 55,\n        }\n    });\n    naverLogin.init();\n    naverLogin.logout();\n  };\n\n  const url = \"https://openapi.naver.com/v1/nid/me\";\n\n  const getNaverToken = () => {\n    if (!location.hash) return;\n    let login_state = queryString.parse(location.hash);\n    console.log(login_state);\n    localStorage.setItem('session_token','donghyukZZANG');\n    navigate(-3, {replace:true});\n/*    axios.get(\"https://openapi.naver.com/v1/nid/me\", {\n        headers: {\n            'Authorization': header,\n        }\n    }).then((res) => {\n        console.log(res);\n        let id = res.data.response.id;\n        //서버에 id 있는지 확인\n        console.log(id);\n        if (id === \"4V2gUbqcgYGgtKyA7nrlVSOVsxfnbu41YXH_VdasDQQ\") navigate('/', {replace: true, state:{isLoggedIn:true, user:{id: id, u_id: -1, u_name:\"신채호\", phone:\"01027803084\", alarm:true, u_gender:true, u_birth:\"19960103\", main_pet:0}}});\n        else{\n            navigate('/signup', {state:{type: \"Naver\"}})\n        }\n    });*/\n\n  };\n\n  const handleNaverClick = () => {\n    naverRef.current.children[0].click();\n  };\n\n/*  const naverGet = () => {\n    window.location.href = \"https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=JmLl2zgPU2ME1WzZHU6s&redirect_uri=http://localhost:3000/login\"\n  };*/\n\n  // 카카오 로긴 관련\n\n  function kakaoLogin(){\n    window.Kakao.Auth.login({\n        success: function (response) {\n            window.Kakao.API.request({\n                url: '/v2/user/me',\n                success: function (response) {\n                    console.log(response);\n                    if(response.id === 2037457098) navigate('/', {replace: true, state:{id: response.id}});\n                    else navigate('/signup', {state:{type: \"Kakao\"}});\n                },\n                fail: function (error) {\n                    console.log(error);\n                },\n            })\n        },\n        fail: function (error) {\n            console.log(error)\n        },\n    });\n  }\n\n  function kakaoLogout() {\n      if (window.Kakao.Auth.getAccessToken()) {\n        window.Kakao.API.request({\n          url: '/v1/user/unlink',\n          success: function (response) {\n          \tconsole.log(response)\n          },\n          fail: function (error) {\n            console.log(error)\n          },\n        })\n        window.Kakao.Auth.setAccessToken(undefined)\n      }\n  }\n\n  // 페이스북 로긴 관련\n\n  const responseFacebook = (response) => {\n    console.log(response);\n    if (response.id === \"4064402136993700\") navigate('/', {replace: true, state:{id: response.id}});\n    else navigate('/signup', {state:{type: \"Facebook\"}});\n  };\n\n  useEffect(() => {\n    initializeNaverLogin();\n    if (!window.Kakao.isInitialized())  window.Kakao.init(process.env.REACT_APP_KAKAO_KEY);\n    getNaverToken();\n  }, []);\n\n  return (\n    <>\n      <Navigation title=\"로그인\" />\n      <div className=\"login-wrap\">\n        <Row>\n          <Col xs={12}>\n            <div className=\"login-inside d-grid\">\n            <div ref={naverRef} id='naverIdLogin'></div>\n              <Button variant=\"naver\" onClick={() => handleNaverClick()}>네이버로 시작하기</Button>\n              {!showMethod && \n              <Button variant=\"kakao\" onClick={() => setShowMethod(true)}>다른 로그인 수단 보기</Button>\n              }\n\n              {showMethod && <>\n              <Button variant=\"kakao\" className=\"btn-kakao-real\" onClick={() => kakaoLogin()}>카카오로 로그인</Button>\n              <FacebookLogin\n                    appId= {process.env.REACT_APP_FB_APPID}\n                    autoLoad={false}\n                    fields=\"name, email, picture\"\n                    callback={responseFacebook}\n                    render={(renderProps) => (\n                        <Button variant=\"facebook\" onClick={renderProps.onClick}>페이스북으로 로그인</Button>\n                    )}\n                ></FacebookLogin>\n              </>\n              }\n\n              <Form.Check type=\"checkbox\" id=\"login-input\"label=\"자동 로그인\" />\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Login;","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\user.js",["183"],"import { useState } from \"react\";\nimport Navigation from \"../components/navigation\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { Row, Col, Image, Table, Button, Modal } from \"react-bootstrap\";\nimport UserNon from \"./user-non\";\n\nimport \"./user.css\";\n\nfunction User() {\n  const navigate = useNavigate();\n  const {state} = useLocation();\n  // For Cancel Order Confirm\n  const [showConfirm, setShowConfirm] = useState(false);\n  const handleCloseConfirm = () => setShowConfirm(false);\n  const handleShowConfirm = () => setShowConfirm(true);\n\n  // For Detail Confirm\n  const [showConfirmDetail, setShowConfirmDetail] = useState(false);\n  const handleCloseConfirmDetail = () => setShowConfirmDetail(false);\n  const handleShowConfirmDetail = () => setShowConfirmDetail(true);\n\n  const isLoggedIn = localStorage.getItem(\"session_token\"); // Check user logged in or not\n  if (!isLoggedIn) {\n    return <UserNon/>;\n  }\n\n  return (\n    <>\n      <Navigation />\n      <div className=\"user-wrap\">\n        <Button variant=\"naver\" onClick={() => {localStorage.removeItem(\"session_token\"); navigate('/',{replace:true})}}>로그아웃</Button>\n        <Link to=\"/user-info\" className=\"user-avatar\">\n        <Row>\n          <Col xs={3}><Image src=\"images/user-pet-full.png\" /></Col>\n          <Col xs={9}>\n            <p className=\"mb-0 mt-3 text-center text-medium\">얘 전체가 버튼</p>\n            <p className=\"mb-0 text-large\">신채호님 <span className=\"text-medium\">(톱니바퀴)</span></p>\n          </Col>\n        </Row>\n        </Link>\n\n        <div className=\"user-links\">\n        <Table className=\"table-borderless fw-bold\">\n          <tbody>\n            <tr>\n              <td width=\"25%\" className=\"align-middle\"><Link to=\"/coupon\">할인쿠폰</Link></td>\n              <td width=\"25%\" className=\"align-middle\"><Link to=\"/like-list\">찜 목록</Link></td>\n              <td width=\"25%\" className=\"align-middle\"><Link to=\"/recent-view\">최근본상품(얘네 탭 순서는 나중에 생각해보기)</Link></td>\n              <td width=\"25%\" className=\"align-middle\"><Link to=\"/top-purchase\">자주 구매</Link></td>\n            </tr>\n          </tbody>\n        </Table>\n        </div>\n\n        <div className=\"recent-order-wrap\">\n          \n          <Row>\n            <Col xs={12} className=\"recent-order-title\">나의 주문  (더보기)</Col>\n            <Col xs={4}><Link to=\"/history\"><Image src=\"images/products/product-1.png\" className=\"img-fluid\" alt=\"product\" /></Link></Col>\n            <Col xs={8}>\n              <Link to=\"/history\">\n                <p className=\"recent-order-product-title\">닭가슴살 브로콜리 고구마 도우 크랜베리 피자 - L size2개</p>\n                <div className=\"steps-container\">\n                  <div className=\"steps\">\n                      <div className=\"steps__item z4 steps__item--active\">\n                        <span>주문 확인</span>\n                      </div>\n                      <div className=\"steps__item z3\">\n                        <span>주문 확인</span>\n                      </div>\n                      <div className=\"steps__item z2\">\n                        <span>주문 확인</span>\n                      </div>\n                      <div className=\"steps__item z1\">\n                        <span>주문 확인</span>\n                      </div>\n                  </div>\n                </div>\n              </Link>\n              <Row>\n                <Col xs={6}><Button variant=\"primary\" className=\"no-rounded w-100\" onClick={handleShowConfirm}>주문 취소</Button><br/>(주문 확인 상태에서만)</Col>\n                <Col xs={6}><Button variant=\"primary\" className=\"no-rounded w-100\" onClick={handleShowConfirmDetail}>상품 문의</Button></Col>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n\n        <Modal centered show={showConfirm} onHide={handleCloseConfirm}>\n          <Modal.Body>\n            <p>닭가슴살 브로콜리 고구마 도우크랜베리 피자 - L size 2개</p>\n            <p>주문번호: 123123</p>\n            <p>해당 주문을 취소하시겠습니까?</p>\n          </Modal.Body>\n          <Modal.Footer className=\"justify-content-center\">\n            <Button variant=\"primary\" onClick={handleCloseConfirm}>네,<br/>취소하겠습니다</Button>\n            <Button variant=\"secondary\" onClick={handleCloseConfirm}>아니요,<br/>취소하지 않겠습니다</Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal centered show={showConfirmDetail} onHide={handleCloseConfirmDetail}>\n          <Modal.Body>\n            상품 문의를 하시겠습니까?\n          </Modal.Body>\n          <Modal.Footer className=\"justify-content-center\">\n            <Button variant=\"primary\" onClick={() => navigate(\"/service\")}>네</Button>\n            <Button variant=\"secondary\" onClick={handleCloseConfirmDetail}>아니오</Button>\n          </Modal.Footer>\n        </Modal>\n\n        <div className=\"user-service-center-wrap\">\n          <Link to=\"/service\">고객 센터</Link>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default User;","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\signup-progress.js",["184","185","186"],"import { useState } from \"react\";\nimport Navigation from \"../components/navigation\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Row, Col, Alert, Image, Button } from \"react-bootstrap\";\n\nimport \"./user.css\";\n\nfunction SignupProgress() {\n  const navigate = useNavigate();\n  const { state } = useLocation();\n  const [isDuplicate, setIsDuplicate] = useState(false);//state.isDuplicate);\n  const [duplicateType, setDuplicateType] = useState(state.duplicateType);\n\n  function getDuplicateText () {\n    return \"이미 \"+ duplicateType+\"로 가입된\";\n  }\n\n  return (\n    <>\n      <Navigation title={!isDuplicate ? \"\" : \"로그인\"} />\n      <div className=\"signup-progress-wrap\">\n        <Row>\n          <Col xs={12}>\n            {!isDuplicate ?\n            <div className=\"signup-progress-inside d-grid gap-3\">\n              <Image className=\"signup-bgimage\" src=\"images/my-pet.png\"/>\n              <div className=\"signup-other\">\n                <p className=\"text-neoeb text-large text-white\">회원가입이 완료되었습니다!</p>\n                <Button variant=\"yellow\" className=\"text-neom text-xxsmallmedium\"style={{width:\"253px\", height: \"45px\", marginTop: \"75px\"}} onClick={() => navigate(\"/pet-register\")}>우리 강아지 등록하기</Button>\n                <Button variant=\"purple\" className=\"text-neom text-xxsmallmedium\"style={{width:\"253px\", height: \"45px\", marginTop: \"12px\"}} onClick={() => navigate(\"/\")}>홈으로 가기</Button>\n              </div>\n            </div>\n            :\n            <div className=\"duplicate-wrap\">\n                <div className=\"duplicate-text\">{getDuplicateText()}</div>\n                <div className=\"duplicate-text\">회원의 전화번호 입니다.</div>\n            </div>\n            }\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default SignupProgress;","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\home\\home.js",["187","188","189","190"],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\search\\search.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\search\\search-query.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\order.js",["191","192","193","194","195","196","197","198"],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\detail.js",["199","200","201","202","203","204","205","206","207","208","209","210","211"],"import { useState, useEffect } from \"react\";\nimport UserRating from \"../components/user-rate\";\nimport { Button, Row, Col, Form, Image, Pagination, Tabs, Tab, Modal } from \"react-bootstrap\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nimport HeaderDetail from \"../components/header-detail\";\n\nimport \"./product.css\";\n\n\nfunction DetailPage(props) {\n  const navigate = useNavigate();\n  const {state, search} = useLocation();\n  const {r_id} = queryString.parse(search);\n  const [isLike, setIsLike] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  /* Product Data*/\n  const productName = \"캐롭 바나나 케이크\";\n  const price = 6000;\n  const largePrice = 3000;\n\n  /* For Modal Q&A */\n  const [showQA, setShowQA] = useState(false);\n  const handleCloseQA = () => setShowQA(false);\n  const handleShowQA = () => setShowQA(true);\n  const [question, setQuestion] = useState(\"\");\n\n  /* For Modal Cart */\n  const [showCart, setShowCart] = useState(false);\n  const handleCloseCart = () => setShowCart(false);\n  const handleShowCart = () => setShowCart(true);\n\n  /* For increase/descrease */\n  var regularTotalPrice = 0;\n  var largeTotalPrice = 0;\n  var totalPrice = 0;\n  const [regularNum, setRegularNum] = useState(0);\n  regularTotalPrice = price*regularNum;\n  const plusRegularNum = () => {\n    if(regularNum < 99) setRegularNum(regularNum+1);\n  }\n  const minusRegularNum = () => {\n    if(regularNum > 0) setRegularNum(regularNum-1);\n  }\n  const [largeNum, setLargeNum] = useState(0);\n  largeTotalPrice = (price+largePrice) * largeNum;\n  const plusLargeNum = () => {\n    if(largeNum < 99) setLargeNum(largeNum+1);\n  }\n  const minusLargeNum = () => {\n    if(largeNum > 0) setLargeNum(largeNum-1);\n  }\n  totalPrice = regularTotalPrice + largeTotalPrice;\n\n  /* Data - ingred, recipe info */\n  const [ingredData, setIngredData] = useState([]);\n  const [recipeData, setRecipeData] = useState([]);\n\n  /* Data - review*/\n  const [reviewNum, setReviewNum] = useState(0);\n  const [reviewList, setReviewList] = useState([]); //페이지로 나눠져있는 리뷰 2중 리스트 [[1페이지 리뷰], [2페이지 리뷰] 등등등]\n  const [reviewData, setReviewData] = useState([]); //현재 렌더링되는 리뷰 데이터\n  const [pagecontrol, setPagecontrol] = useState([]); //페이지 번호 컴포넌트 배열\n  const [activePage, setActivePage] = useState(1); //활성화된 페이지\n\n  /* Data - QnA*/\n  const [isMore, setIsMore] = useState(false);\n  const [qaList, setQaList] = useState([]); //QA 총 리스트\n  const [qaData, setQaData] = useState([]); //현재 렌더링되는 Q&A 데이터\n\n  function getData() {\n    // 레시피탭 - 재료 리스트\n    let ingredList = [{\n        name: \"블루베리\",\n        amt: \"20g\"\n    }, {\n        name: \"산딸기\",\n        amt: \"45g\"\n    }, {\n        name: \"락토프리 우유\",\n        amt: \"40ml/40ml\"\n    }]\n    // 레시피탭 - 실제 레시피 리스트\n    let recipeList = [{\n      imageURL: \"prod0/1.png\",\n      contents: \"블루베리(20g)와 우유(40ml)를 믹서기에 넣고 갈아주세요.\"\n    },{\n      imageURL: \"prod0/2.png\",\n      contents: \"산딸기(45g)와 우유(40ml)를 믹서기에 넣고 갈아주세요.\"\n    }]\n    // 리뷰탭 - 리뷰 리스트\n    let reviewList = [{\n      user: \"신*호\",\n      score: 5,\n      imageURL: \"prod0/main.png\",\n      date: \"2022.01.05\",\n      buyinfo: [10, 301],\n      contents: \"개맛있음ㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇ\"\n    },{\n      user: \"신*호\",\n      score: 4,\n      imageURL: \"prod0/main.png\",\n      date: \"2022.01.01\",\n      buyinfo: [0, 3],\n      contents: \"신년~~\"\n    },{\n      user: \"Al*x\",\n      score: 5,\n      imageURL: \"prod0/main.png\",\n      date: \"2021.12.25\",\n      buyinfo: [0, 3],\n      contents: \"크리스마스~\"\n    },{\n      user: \"구*진\",\n      score: 1,\n      imageURL: \"prod0/main.png\",\n      date: \"2021.12.22\",\n      buyinfo: [0, 3],\n      contents: \"개맛없음\"\n    }, {\n      user: \"구*진\",\n      score: 1,\n      imageURL: \"prod0/main.png\",\n      date: \"2021.12.22\",\n      buyinfo: [0, 3],\n      contents: \"개맛없음\"\n    }, {\n      user: \"구*진\",\n      score: 1,\n      imageURL: \"prod0/main.png\",\n      date: \"2021.12.22\",\n      buyinfo: [0, 3],\n      contents: \"개맛없음\"\n    }]\n    let reviewLen = reviewList.length;\n\n    let pageNum = Math.floor(reviewLen/5);\n    if ((reviewLen - pageNum*5) > 0) pageNum += 1;\n\n    /* 페이지네이션 컴포넌트 만들기*/\n    let pages = [];\n    for (let number = 1; number <= pageNum; number++) {\n        pages.push(\n          <Pagination.Item key={number} active= {number === activePage}>\n            {number}\n          </Pagination.Item>,\n        );\n    }\n    /* 실제 리뷰 슬라이싱*/\n    let real_reviewList = [];\n    for (let page=0; page<pageNum; page++){\n        let data = [];\n        for(let i=0; i<5; i++){\n            if(page*5+i < reviewLen) data.push(reviewList[page*5+i]);\n            else break;\n        }\n        real_reviewList.push(data);\n    }\n\n    /* QnA 리스트*/\n    let qaList = [{\n      question: \"양배추는 몇 g 오나요?\",\n      answer: \"200g 드립니다~^^\"\n    },{\n      question: \"양배추는 몇 g 오나요?\",\n      answer: \"200g 드립니다~^^\"\n    },{\n      question: \"양배추는 몇 g 오나요?\",\n      answer: \"200g 드립니다~^^\"\n    },{\n      question: \"양배추는 몇 g 오나요?\",\n      answer: \"200g 드립니다~^^\"\n    },{\n      question: \"양배추는 몇 g 오나요?\",\n      answer: \"200g 드립니다~^^\"\n    },{\n      question: \"양배추는 몇 g 오나요?\",\n      answer: \"200g 드립니다~^^\"\n    },{\n      question: \"양배추는 몇 g 오나요?\",\n      answer: \"200g 드립니다~^^\"\n    },{\n      question: \"양배추는 몇 g 오나요?\",\n      answer: \"200g 드립니다~^^\"\n    }]\n    let qaData = qaList.slice(0, 5);\n\n    setIngredData(ingredList);\n    setRecipeData(recipeList);\n\n    setReviewNum(reviewLen);\n    setReviewList(real_reviewList);\n    setReviewData(real_reviewList[activePage-1]);\n    setPagecontrol(pages);\n\n    setQaList(qaList);\n    setQaData(qaData);\n  }\n\n  function changePage(num) {\n    let pages = [];\n    let pageNum = Math.floor(reviewNum/5);\n    if ((reviewNum - pageNum*5) > 0) pageNum += 1;\n\n    for (let number = 1; number <= pageNum; number++) {\n        pages.push(\n          <Pagination.Item key={number} active= {number === num}>\n            {number}\n          </Pagination.Item>,\n        );\n    }\n    setActivePage(num);\n    setPagecontrol(pages);\n    setReviewData(reviewList[num-1]);\n  }\n\n  function qaMore() {\n    setIsMore(true);\n    setQaData(qaList);\n  }\n\n  useEffect(() => {\n    getData();\n    if(localStorage.getItem(\"session_token\")){\n        setIsLoggedIn(true);\n        /* 강아지 정보 받기 */\n    }\n  }, []);\n\n  function share() {\n    console.log(\"share\");\n  }\n\n  function makeWonString(num) {\n    return num.toLocaleString('ko-KR')+\"원\";\n  }\n\n  function numTextFilter(val, type){\n    let final = val.replace(/[^0-9]/g, \"\");\n    if (type===0) setRegularNum(final);\n    else if (type === 1) setLargeNum(final);\n  }\n\n  function goOrder(){\n    let tmp_state = {product: {regular: regularNum, large: largeNum}}\n    navigate(\"/order\", {state:tmp_state});\n  }\n\n  return (\n    <>\n    <HeaderDetail/>\n    <div className=\"product-detail-wrap\">\n      <Row>\n        <Col xs={12}>\n          <Image src=\"images/prod0/main.png\" className=\"product-image\" alt=\"product-main-image\"/>\n          <div style={{display: \"flex\", width: \"100%\", justifyContent: \"space-between\", alignItems: \"center\"}}>\n            <div className=\"d-flex\">\n                <span className=\"product-challenging\" id=\"product-challenging-detail\">도전!</span>\n                <span className=\"product-detail-time\"><span style={{marginTop: \"2px\"}}>125분</span></span>\n            </div>\n            <div className=\"d-flex\">\n                <Image src=\"images/share-icon.svg\" className=\"product-detail-share\" alt=\"share social\" onClick={() => share()}/>\n            </div>\n          </div>\n          <p className=\"product-title detail mt-1\">캐롭바나나케이크</p>\n          <p className=\"text-neoeb text-medium text-black mt-2\">Kit: 6,000원 <span className=\"text-neom text-small text-black\">(L-size +2000원)</span> </p>\n          <p className=\"text-neom text-small text-gray\">“어쩌구 저쩌구 저쩌구 우짜구 자짜구 맛있는 맛있는 피자” (요약, 설명)</p>\n          {isLoggedIn ? (\n            <p className=\"text-neom text-smallmedium text-blackgray text-center\">{\"뭉치\"+\"의 \"+\"1\"+\"일치 간식이에요!!\"}</p>\n          ):(\n            <ul className=\"text-neom text-smallmedium text-blackgray\">\n              <li>{\"소형견(~10kg): \"+\"5\"+\"일치\"}</li>\n              <li>{\"중형견(10kg~20kg): \"+\"3\"+\"일치\"}</li>\n              <li>{\"중형견(20kg): \"+\"1\"+\"일치\"}</li>\n            </ul>\n          )\n          }\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xs={12}>\n          <Tabs justify defaultActiveKey=\"recipe\" id=\"tab-product-detail\" className=\"mt-3 mb-3 tab-petkit tab-product-detail\">\n            <Tab eventKey=\"recipe\" tabClassName=\"tab-2text\" title=\"레시피\">\n              <h1 className=\"product-detail-title text-neosb text-smallmedium text-halfblack\" style={{marginTop:\"30px\", marginBottom:\"20px\"}}>재료</h1>\n              {ingredData.map((state, index) =>\n                <div key={index} className=\"product-ingredtable\" style={{marginTop:\"10px\"}}>\n                  <span className=\"text-neor text-small text-black\">{state.name}</span>\n                  <span className=\"text-neor text-small text-lightgray\">{state.amt}</span>\n                </div>\n              )}\n              <h1 className=\"product-detail-title text-neosb text-smallmedium text-halfblack\" style={{marginTop:\"36px\", marginBottom:\"30px\"}}>레시피</h1>\n              {recipeData.map((state, index) =>\n                <div key={index} style={{marginBottom:\"72px\"}}>\n                  <p className=\"mb-0\"><Image src={\"images/\"+state.imageURL} className=\"product-image\" /></p>\n                  <p className=\"steptext text-neosb text-smallmedium text-halfblack\">{\"Step \"+(parseInt(index)+1)}</p>\n                  <p className=\"text-neor text-small text-black\">{state.contents}</p>\n                </div>\n              )}\n            </Tab>\n\n            <Tab eventKey=\"kit-information\" tabClassName=\"tab-2text\" title=\"키트 정보\">\n                <Image src=\"images/prod0/kitinfo.jpg\" className=\"product-image\" alt=\"product-main-image\" style={{marginTop:\"30px\"}}/>\n            </Tab>\n\n            <Tab eventKey=\"review\" tabClassName=\"tab-2text\" title=\"리뷰\">\n              <div style={{marginTop:\"30px\"}}>\n                <p className=\"mb-0 text-neosb text-smallmedium text-halfblack\">{\"리뷰(\"+String(reviewNum)+\")\"}</p>\n                <UserRating rate={4} show=\"on\" align=\"center\" />\n              </div>\n              {reviewData.map((review, index) =>\n                  <div key={index} style={{borderBottom:\"1px solid #E4E4E4\", paddingBottom: \"16px\", marginBottom:\"10px\"}}>\n                    <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", alignItems:\"center\", marginBottom:\"6px\"}}>\n                        <div className=\"text-neosb text-smallmedium text-halfblack\">{review.user}</div>\n                        <div className=\"text-neom text-small text-black\">{review.date}</div>\n                    </div>\n                    <UserRating rate={review.score} size=\"sm\" />\n                    <div>\n                      <p className=\"text-neom text-small text-black\">{\"구매 정보: Lx\"+String(review.buyinfo[0])+\", Mx\"+String(review.buyinfo[1])}</p>\n                      <Row>\n                        <Col xs={4}><Image src={\"images/\"+review.imageURL} className=\"img-fluid\" alt=\"product review\" /></Col>\n                        <Col xs={8}><span className=\"text-neor text-small text-black\" style={{}}>{review.contents}</span></Col>\n                      </Row>\n                    </div>\n                  </div>\n              )}\n              <div className=\"review-pagination\"><Pagination onClick={(event) => changePage(parseInt(event.target.text))}>{pagecontrol}</Pagination></div>\n            </Tab>\n\n            <Tab eventKey=\"qna\" tabClassName=\"tab-2text\" title=\"Q&A\">\n              <p className=\"text-neosb text-smallmedium text-halfblack\" style={{marginTop:\"30px\"}}>상품 문의</p>\n              <div className=\"product-detail-qna\">\n                <Form.Group controlId=\"qna\" style={{width: \"70%\"}}>\n                    <Form.Control type=\"input\" placeholder=\"상품 관련 질문을 등록해주세요.\" onChange= {(e) => {setQuestion(e.target.value);}} required />\n                </Form.Group>\n                <Button variant=\"purple\" className=\"text-neom text-xxsmallmedium\" style={{letterSpacing: \"2.24px\", width: \"80px\", height: \"40px\"}}onClick={handleShowQA}>등록</Button>\n              </div>\n              <div style={{marginTop:\"52px\"}}>\n                <div className=\"text-neom text-small text-black\" style={{width:\"100%\", padding: \"8px 0\", borderBottom: \"1px solid #E4E4E4\"}}>최근 질문</div>\n                {qaData.map((qa, index) =>\n                    <div key={index} style={{display:\"flex\", flexDirection:\"column\", marginTop:\"8px\", padding:\"8px 0\", borderBottom: \"1px solid #E4E4E4\"}}>\n                      <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"flex-start\", marginBottom:\"6px\"}}>\n                        <span className=\"text-neoh text-medium text-purple\" style={{marginRight:\"24px\"}}>Q</span>\n                        <span className=\"text-neor text-small text-black\" style={{marginTop:\"4px\", lineHeight:\"20.8px\"}}>{qa.question}</span>\n                      </div>\n                      <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"flex-start\"}}>\n                        <span className=\"text-neoh text-medium text-orange\" style={{marginRight:\"24px\"}}>A</span>\n                        <span className=\"text-neor text-small text-black\" style={{marginTop:\"4px\", lineHeight:\"20.8px\"}}>{qa.answer}</span>\n                      </div>\n                    </div>\n                )}\n                {!isMore && <Button variant=\"purple\" className=\"text-neom text-xxsmallmedium\" style={{width:\"100%\", marginTop:\"36px\"}} onClick={() => {qaMore()}}>Q&A 더보기</Button>}\n              </div>\n              <Modal centered className=\"modal-qa\" show={showQA} onHide={handleCloseQA}>\n                <Modal.Body>질문을 등록하시겠습니까?</Modal.Body>\n                <Modal.Footer className=\"justify-content-center\">\n                  <Button variant=\"primary\" onClick={handleCloseQA}>등록</Button>\n                  <Button variant=\"secondary\" onClick={handleCloseQA}>취소</Button>\n                </Modal.Footer>\n              </Modal>\n            </Tab>\n          </Tabs>\n        </Col>\n      </Row>\n    </div>\n\n    {!showCart && <div className=\"product-cart-button\">\n      <span className={isLike ? \"product-likedetail active\" : \"product-likedetail\"}  onClick={() => setIsLike(!isLike)}></span>\n      <Button variant=\"primary\" className=\"text-neom text-xxsmallmedium\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\", width:\"84.07%\", height:\"44px\"}} onClick={handleShowCart}>구매하기</Button>\n    </div>}\n    <Modal className=\"modal-cart\" show={showCart} onHide={handleCloseCart}>\n      <Modal.Header>\n        <Button className=\"filter-btn-close\" variant=\"default\" onClick={handleCloseCart}></Button>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"modal-cart-item\" style={{borderTop: \"1px solid #E4E4E4\", borderBottom:\"1px solid #E4E4E4\", marginTop:\"12px\"}}>\n          <div className=\"text-neor text-small text-black\">{productName+\"- Regular size\"}</div>\n          <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", alignItems:\"center\", marginTop:\"8px\"}}>\n            <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\n              <button className=\"btn-descrease\" onClick={() => {minusRegularNum()}}></button>\n              <input type=\"text\" className=\"cart-item-number text-neosb text-xxsmallmedium text-black\" value={regularNum} onChange={(e) => numTextFilter(e.target.value, 0)} />\n              <button className=\"btn-increase\" onClick={() => {plusRegularNum()}}></button>\n            </div>\n            <div className=\"modal-cart-price text-neosb text-xxsmallmedium text-black\">{makeWonString(regularTotalPrice)}</div>\n          </div>\n        </div>\n        { largePrice !== 0 &&\n            <div className=\"modal-cart-item\" style={{borderBottom:\"1px solid #E4E4E4\"}}>\n              <div className=\"text-neor text-small text-black\">{productName+\"- Large size\"}</div>\n              <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", alignItems:\"center\", marginTop:\"8px\"}}>\n                <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\n                  <button className=\"btn-descrease\" onClick={() => {minusLargeNum()}}></button>\n                  <input type=\"text\" className=\"cart-item-number text-neosb text-xxsmallmedium text-black\" value={largeNum} onChange={(e) => numTextFilter(e.target.value, 1)} />\n                  <button className=\"btn-increase\" onClick={() => {plusLargeNum()}}></button>\n                </div>\n                <div className=\"modal-cart-price text-neosb text-xxsmallmedium text-black\">{makeWonString(largeTotalPrice)}</div>\n              </div>\n            </div>\n        }\n        <div className=\"modal-cart-item-total text-neor text-small text-black\" style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"flex-end\", alignItems:\"center\", marginTop:\"16px\"}}>총 상품 금액&nbsp;<span className=\"text-neoeb text-smallmedium text-red\">{makeWonString(totalPrice)}</span></div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"default text-neom text-xxsmallmedium text-black\" style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"center\", height:\"44px\", width:\"38%\", paddingTop:\"10px\", border:\"1px solid #9E9E9E\"}} onClick={handleCloseCart}>장바구니</Button>\n        <Button variant=\"primary text-neom text-xxsmallmedium text-black\" style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"center\", height:\"44px\", width:\"56.4%\", paddingTop:\"12px\"}} onClick={() => {goOrder()}}>바로구매</Button>\n      </Modal.Footer>\n    </Modal>\n    </>\n  );\n}\n\nexport default DetailPage;","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\cart.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\history.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\order-return.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\order-detail.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\order-review.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\order-progress.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\like-list.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\top-purchase.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\recent-view.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\product\\coupon.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\pet\\register.js",["212"],"import { useState } from \"react\";\nimport Navigation from \"../components/navigation\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\n\nimport \"./pet.css\";\n\nfunction PetRegister() {\n  const navigate = useNavigate();\n\n  /* Modal Confirm */\n  const [showConfirm, setShowConfirm] = useState(false);\n  const handleCloseConfirm = () => {\n    setShowConfirm(false);\n    setShowConfirmCancel(true);\n  }\n  const handleShowConfirm = () => setShowConfirm(true);\n\n  /* Modal Confirm Cancel */\n  const [showConfirmCancel, setShowConfirmCancel] = useState(false);\n  const handleCloseConfirmCancel = () => setShowConfirmCancel(false);\n  const handleShowConfirmCancel = () => setShowConfirmCancel(true);\n\n\n  return (\n    <>\n    <Navigation title=\"반려동물 등록\" />\n    <div className=\"pet-register-wrap\">\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"chkPrimaryPet\">\n        <Form.Check type=\"checkbox\" label=\"대표 반려동물로 설정\" />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"petName\">\n        <Form.Label>이름</Form.Label>\n        <Form.Control type=\"text\" size=\"lg\" placeholder=\"강아지 이름을 입력해주세요.\" />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"petCategory1\">\n        <Form.Label>반려동물 종류</Form.Label>\n        <Form.Select size=\"lg\">\n          <option>반려동물을 선택해주세요.</option>\n          <option value=\"dog\">Dog</option>\n          <option value=\"cat\">Cat</option>\n          <option value=\"...\">...</option>\n        </Form.Select>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"petCategory2\">\n        <Form.Label>상세 정보</Form.Label>\n        <Form.Select size=\"lg\">\n          <option>종을 선택해주세요.</option>\n          <option value=\"dog1\">Dog 1</option>\n          <option value=\"dog2\">Dog 2</option>\n          <option value=\"...\">...</option>\n        </Form.Select>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"petSex\">\n        <Form.Label>성별</Form.Label>\n        <Form.Select size=\"lg\">\n          <option>성별을 선택해주세요.</option>\n          <option value=\"남\">남</option>\n          <option value=\"여\">여</option>\n        </Form.Select>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"petBirthday\">\n        <Form.Label>생일</Form.Label>\n        <Form.Select size=\"lg\">\n          <option>생일을 선택해주세요.</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"...\">...</option>\n        </Form.Select>\n      </Form.Group>\n\n      <section className=\"mt-4\">\n        <h3 className=\"section-title\">반려동물 좋아하는 식재료</h3>\n\n        <Form.Group className=\"mb-3\" controlId=\"chkPetFoods\">\n          <Form.Check type=\"checkbox\" label=\"1. 닭고기\" />\n          <Form.Check type=\"checkbox\" label=\"2. 오리고기\" />\n        </Form.Group>\n      </section>\n\n      <section className=\"mt-4\">\n        <h3 className=\"section-title\">반려동물 질병</h3>\n\n        <Form.Group className=\"mb-3\" controlId=\"chkPetDisease\">\n          <Form.Check type=\"checkbox\" label=\"1. 눈\" />\n          <Form.Check type=\"checkbox\" label=\"2. 슬개골\" />\n        </Form.Group>\n      </section>\n\n      <section className=\"mt-4\">\n        <h3 className=\"section-title\">반려동물 알러지 식재료</h3>\n\n        <Form.Group className=\"mb-3\" controlId=\"chkPetAllergens\">\n          <Form.Check type=\"checkbox\" label=\"1. 닭고기\" />\n          <Form.Check type=\"checkbox\" label=\"2. 오리고기\" />\n        </Form.Group>\n      </section>\n      \n      <Button variant=\"primary\" className=\"w-100 mt-3 mb-5\" onClick={handleShowConfirm}>등록하기</Button>\n\n      <Modal centered show={showConfirm} onHide={handleCloseConfirm}>\n        <Modal.Body>해당 정보로 등록 하시겠습니까?</Modal.Body>\n        <Modal.Footer className=\"justify-content-center\">\n          <Button variant=\"primary\" onClick={() => navigate(-1)}>네</Button>\n          <Button variant=\"secondary\" onClick={handleCloseConfirm}>아니오</Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal centered show={showConfirmCancel} onHide={handleCloseConfirmCancel}>\n        <Modal.Body>등록을 취소하시겠습니까?</Modal.Body>\n        <Modal.Footer className=\"justify-content-center\">\n          <Button variant=\"primary\" onClick={() => navigate(-1)}>네</Button>\n          <Button variant=\"secondary\" onClick={handleCloseConfirm}>아니오</Button>\n        </Modal.Footer>\n      </Modal>\n\n    </Form>\n    </div>\n    </>\n  );\n}\n\nexport default PetRegister;","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\pet\\modify.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\payment\\list.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\payment\\add.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\service\\service.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\user\\user-non.js",["213"],"import Navigation from \"../components/navigation\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { Row, Col, Button } from \"react-bootstrap\";\n\nfunction UserNon(props) {\n  const navigate = useNavigate();\n  return (\n    <>\n      <Navigation title=\"마이페이지\"/>\n      <div className=\"non-user-wrap\">\n        <Row>\n          <Col xs={12} className=\"text-center\">\n            <div className=\"non-user-login-wrap\">\n              <div className=\"d-block pt-0\">\n                <Button variant=\"yellow\" className=\"text-neom text-xxsmallmedium\" style={{width:\"141.5777px\", height:\"36.3952px\", paddingTop: \"7px\"}} onClick={() => navigate('/login')}>로그인</Button>\n                <p className=\"pt-2 pb-0 mb-0\">로그인 후 이용해주세요</p>\n              </div>\n            </div>\n          </Col>\n          <Col xs={12}>\n            <p><Link to=\"/cart\" className=\"link-top\">장바구니</Link></p>\n            <p><Link to=\"/\" className=\"link-border\">상품 등록 문의</Link></p>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default UserNon;","C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\header-main.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\navigation.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\header.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\header-search.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\user-rate.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\header-detail.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\home\\main-product.js",[],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\custom-select.js",["214"],"C:\\Users\\chaih\\Desktop\\petkitweb\\src\\pages\\components\\custom-selectcheck.js",["215","216","217"],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":10,"column":10,"nodeType":"224","messageId":"225","endLine":10,"endColumn":14},{"ruleId":"222","severity":1,"message":"226","line":44,"column":9,"nodeType":"224","messageId":"225","endLine":44,"endColumn":16},{"ruleId":"222","severity":1,"message":"227","line":45,"column":9,"nodeType":"224","messageId":"225","endLine":45,"endColumn":19},{"ruleId":"222","severity":1,"message":"228","line":46,"column":9,"nodeType":"224","messageId":"225","endLine":46,"endColumn":18},{"ruleId":"222","severity":1,"message":"229","line":47,"column":9,"nodeType":"224","messageId":"225","endLine":47,"endColumn":16},{"ruleId":"222","severity":1,"message":"230","line":48,"column":9,"nodeType":"224","messageId":"225","endLine":48,"endColumn":21},{"ruleId":"222","severity":1,"message":"231","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":16},{"ruleId":"222","severity":1,"message":"232","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":13},{"ruleId":"222","severity":1,"message":"233","line":34,"column":9,"nodeType":"224","messageId":"225","endLine":34,"endColumn":12},{"ruleId":"222","severity":1,"message":"234","line":90,"column":12,"nodeType":"224","messageId":"225","endLine":90,"endColumn":23},{"ruleId":"235","severity":1,"message":"236","line":117,"column":6,"nodeType":"237","endLine":117,"endColumn":8,"suggestions":"238"},{"ruleId":"222","severity":1,"message":"239","line":11,"column":10,"nodeType":"224","messageId":"225","endLine":11,"endColumn":15},{"ruleId":"222","severity":1,"message":"240","line":4,"column":20,"nodeType":"224","messageId":"225","endLine":4,"endColumn":25},{"ruleId":"222","severity":1,"message":"241","line":11,"column":23,"nodeType":"224","messageId":"225","endLine":11,"endColumn":37},{"ruleId":"222","severity":1,"message":"242","line":12,"column":25,"nodeType":"224","messageId":"225","endLine":12,"endColumn":41},{"ruleId":"222","severity":1,"message":"239","line":17,"column":11,"nodeType":"224","messageId":"225","endLine":17,"endColumn":16},{"ruleId":"222","severity":1,"message":"243","line":23,"column":19,"nodeType":"224","messageId":"225","endLine":23,"endColumn":29},{"ruleId":"235","severity":1,"message":"244","line":292,"column":6,"nodeType":"237","endLine":292,"endColumn":8,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":310,"column":71,"nodeType":"248","messageId":"249","endLine":310,"endColumn":72},{"ruleId":"222","severity":1,"message":"250","line":13,"column":9,"nodeType":"224","messageId":"225","endLine":13,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":16,"column":10,"nodeType":"224","messageId":"225","endLine":16,"endColumn":14},{"ruleId":"222","severity":1,"message":"251","line":17,"column":10,"nodeType":"224","messageId":"225","endLine":17,"endColumn":18},{"ruleId":"222","severity":1,"message":"252","line":19,"column":19,"nodeType":"224","messageId":"225","endLine":19,"endColumn":29},{"ruleId":"222","severity":1,"message":"253","line":20,"column":10,"nodeType":"224","messageId":"225","endLine":20,"endColumn":23},{"ruleId":"222","severity":1,"message":"254","line":22,"column":10,"nodeType":"224","messageId":"225","endLine":22,"endColumn":27},{"ruleId":"222","severity":1,"message":"255","line":22,"column":29,"nodeType":"224","messageId":"225","endLine":22,"endColumn":49},{"ruleId":"222","severity":1,"message":"256","line":25,"column":12,"nodeType":"224","messageId":"225","endLine":25,"endColumn":27},{"ruleId":"222","severity":1,"message":"239","line":14,"column":10,"nodeType":"224","messageId":"225","endLine":14,"endColumn":15},{"ruleId":"222","severity":1,"message":"257","line":15,"column":10,"nodeType":"224","messageId":"225","endLine":15,"endColumn":14},{"ruleId":"222","severity":1,"message":"258","line":28,"column":10,"nodeType":"224","messageId":"225","endLine":28,"endColumn":18},{"ruleId":"235","severity":1,"message":"259","line":230,"column":6,"nodeType":"237","endLine":230,"endColumn":8,"suggestions":"260"},{"ruleId":"246","severity":1,"message":"247","line":271,"column":87,"nodeType":"248","messageId":"249","endLine":271,"endColumn":88},{"ruleId":"246","severity":1,"message":"247","line":271,"column":92,"nodeType":"248","messageId":"249","endLine":271,"endColumn":93},{"ruleId":"246","severity":1,"message":"247","line":271,"column":96,"nodeType":"248","messageId":"249","endLine":271,"endColumn":97},{"ruleId":"246","severity":1,"message":"247","line":274,"column":34,"nodeType":"248","messageId":"249","endLine":274,"endColumn":35},{"ruleId":"246","severity":1,"message":"247","line":274,"column":38,"nodeType":"248","messageId":"249","endLine":274,"endColumn":39},{"ruleId":"246","severity":1,"message":"247","line":275,"column":38,"nodeType":"248","messageId":"249","endLine":275,"endColumn":39},{"ruleId":"246","severity":1,"message":"247","line":275,"column":42,"nodeType":"248","messageId":"249","endLine":275,"endColumn":43},{"ruleId":"246","severity":1,"message":"247","line":276,"column":33,"nodeType":"248","messageId":"249","endLine":276,"endColumn":34},{"ruleId":"246","severity":1,"message":"247","line":276,"column":37,"nodeType":"248","messageId":"249","endLine":276,"endColumn":38},{"ruleId":"222","severity":1,"message":"261","line":22,"column":9,"nodeType":"224","messageId":"225","endLine":22,"endColumn":32},{"ruleId":"222","severity":1,"message":"262","line":2,"column":29,"nodeType":"224","messageId":"225","endLine":2,"endColumn":40},{"ruleId":"235","severity":1,"message":"263","line":21,"column":6,"nodeType":"237","endLine":21,"endColumn":13,"suggestions":"264"},{"ruleId":"222","severity":1,"message":"265","line":9,"column":10,"nodeType":"224","messageId":"225","endLine":9,"endColumn":23},{"ruleId":"222","severity":1,"message":"266","line":9,"column":25,"nodeType":"224","messageId":"225","endLine":9,"endColumn":41},{"ruleId":"235","severity":1,"message":"267","line":34,"column":6,"nodeType":"237","endLine":34,"endColumn":8,"suggestions":"268"},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'success' is assigned a value but never used.","'error_code' is assigned a value but never used.","'error_msg' is assigned a value but never used.","'imp_uid' is assigned a value but never used.","'merchant_uid' is assigned a value but never used.","'ReactDOM' is defined but never used.","'axios' is defined but never used.","'url' is assigned a value but never used.","'kakaoLogout' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNaverToken'. Either include it or remove the dependency array.","ArrayExpression",["271"],"'state' is assigned a value but never used.","'Alert' is defined but never used.","'setIsDuplicate' is assigned a value but never used.","'setDuplicateType' is assigned a value but never used.","'setCartNum' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filterCheck_manual', 'initial_filter_array', 'maxPrice', 'maxTime', 'minPrice', and 'minTime'. Either include them or remove the dependency array.",["272"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'productInfo' is assigned a value but never used.","'phoneNum' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'detailAddress' is assigned a value but never used.","'additionalRequest' is assigned a value but never used.","'setAdditionalRequest' is assigned a value but never used.","'makePhoneString' is defined but never used.","'r_id' is assigned a value but never used.","'question' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["273"],"'handleShowConfirmCancel' is assigned a value but never used.","'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["274"],"'mainTextStyle' is assigned a value but never used.","'setMainTextStyle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.placeholder'. Either include it or remove the dependency array. If 'setMainText' needs the current value of 'props.placeholder', you can also switch to useReducer instead of useState and read 'props.placeholder' in the reducer.",["275"],"no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [getNaverToken]",{"range":"286","text":"287"},"Update the dependencies array to be: [filterCheck_manual, initial_filter_array, maxPrice, maxTime, minPrice, minTime]",{"range":"288","text":"289"},"Update the dependencies array to be: [getData]",{"range":"290","text":"291"},"Update the dependencies array to be: [options, value]",{"range":"292","text":"293"},"Update the dependencies array to be: [props.placeholder]",{"range":"294","text":"295"},[3810,3812],"[getNaverToken]",[9038,9040],"[filterCheck_manual, initial_filter_array, maxPrice, maxTime, minPrice, minTime]",[6216,6218],"[getData]",[647,654],"[options, value]",[1015,1017],"[props.placeholder]"]