{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaih\\\\Desktop\\\\petkitweb\\\\src\\\\pages\\\\components\\\\custom-select.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CustomSelect(props) {\n  _s();\n\n  const options = props.options;\n  const [value, setValue] = props.value;\n  const [isOpened, setIsOpened] = useState(false);\n  const strActiveStar = [];\n  const strUnactiveStar = [];\n\n  function set(str) {\n    setValue(str);\n  }\n\n  function setStyle(idx) {\n    if (parseInt(value) - 1 === idx) return \"dropdown-selected\";\n    return \"dropdown-normal\";\n  }\n\n  console.log(options[parseInt(value)]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"rgba(100, 0, 0, 0.5)\",\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"fixed\",\n        zIndex: \"5\",\n        left: \"0\",\n        top: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"default\",\n        onClick: () => {\n          setIsOpened(!isOpened);\n        },\n        children: options[parseInt(value) - 1].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), isOpened && /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: options.map((state, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            className: setStyle(index),\n            onClick: () => {\n              setValue(state.value);\n              console.log(value);\n            },\n            children: state.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomSelect, \"9ncJBgm3/jnwyg5t+wlOFkVYK9k=\");\n\n_c = CustomSelect;\nexport default CustomSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelect\");","map":{"version":3,"sources":["C:/Users/chaih/Desktop/petkitweb/src/pages/components/custom-select.js"],"names":["Button","Dropdown","useState","CustomSelect","props","options","value","setValue","isOpened","setIsOpened","strActiveStar","strUnactiveStar","set","str","setStyle","idx","parseInt","console","log","background","width","height","position","zIndex","left","top","label","map","state","index"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,iBAAjC;AACA,SAASC,QAAT,QAAwB,OAAxB;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,KAAK,CAACE,KAAhC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMQ,aAAa,GAAG,EAAtB;AACA,QAAMC,eAAe,GAAG,EAAxB;;AAEA,WAASC,GAAT,CAAaC,GAAb,EAAiB;AACfN,IAAAA,QAAQ,CAACM,GAAD,CAAR;AACD;;AAED,WAASC,QAAT,CAAkBC,GAAlB,EAAsB;AACpB,QAAGC,QAAQ,CAACV,KAAD,CAAR,GAAgB,CAAhB,KAAsBS,GAAzB,EAA8B,OAAO,mBAAP;AAC9B,WAAO,iBAAP;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAO,CAACW,QAAQ,CAACV,KAAD,CAAT,CAAnB;AAEA,sBACE;AAAA,4BACA;AAAK,MAAA,KAAK,EAAE;AAACa,QAAAA,UAAU,EAAC,sBAAZ;AAAoCC,QAAAA,KAAK,EAAC,OAA1C;AAAmDC,QAAAA,MAAM,EAAC,OAA1D;AAAmEC,QAAAA,QAAQ,EAAC,OAA5E;AAAqFC,QAAAA,MAAM,EAAC,GAA5F;AAAiGC,QAAAA,IAAI,EAAE,GAAvG;AAA4GC,QAAAA,GAAG,EAAE;AAAjH;AAAZ;AAAA;AAAA;AAAA;AAAA,YADA,eAGA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,MAAM;AAAChB,UAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAAuB,SAAjE;AAAA,kBAAoEH,OAAO,CAACW,QAAQ,CAACV,KAAD,CAAR,GAAgB,CAAjB,CAAP,CAA2BoB;AAA/F;AAAA;AAAA;AAAA;AAAA,cADF,EAEIlB,QAAD,iBACC,QAAC,QAAD;AAAA,kBACKH,OAAO,CAACsB,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACT;AAAA,iCACI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,SAAS,EAAEf,QAAQ,CAACe,KAAD,CAAlC;AAA2C,YAAA,OAAO,EAAE,MAAM;AAACtB,cAAAA,QAAQ,CAACqB,KAAK,CAACtB,KAAP,CAAR;AAAuBW,cAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AAAmB,aAArG;AAAA,sBACKsB,KAAK,CAACF;AADX;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUG,KAAV;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAoBD;;GAtCQ1B,Y;;KAAAA,Y;AAwCT,eAAeA,YAAf","sourcesContent":["import { Button, Dropdown } from \"react-bootstrap\";\r\nimport { useState} from \"react\";\r\n\r\nfunction CustomSelect(props) {\r\n  const options = props.options;\r\n  const [value, setValue] = props.value;\r\n  const [isOpened, setIsOpened] = useState(false);\r\n\r\n  const strActiveStar = [];\r\n  const strUnactiveStar = [];\r\n\r\n  function set(str){\r\n    setValue(str);\r\n  }\r\n\r\n  function setStyle(idx){\r\n    if(parseInt(value)-1 === idx) return \"dropdown-selected\";\r\n    return \"dropdown-normal\";\r\n  }\r\n  console.log(options[parseInt(value)]);\r\n\r\n  return (\r\n    <>\r\n    <div style={{background:\"rgba(100, 0, 0, 0.5)\", width:\"100vw\", height:\"100vh\", position:\"fixed\", zIndex:\"5\", left: \"0\", top: \"0\"}}>\r\n    </div>\r\n    <div className=\"dropdown-wrap\">\r\n      <Button variant=\"default\" onClick={() => {setIsOpened(!isOpened)}}>{options[parseInt(value)-1].label}</Button>\r\n      {(isOpened) &&\r\n        <Dropdown>\r\n            {options.map((state, index) => (\r\n                <div key={index}>\r\n                    <Dropdown.Item className={setStyle(index)} onClick={() => {setValue(state.value); console.log(value)}}>\r\n                        {state.label}\r\n                    </Dropdown.Item>\r\n                </div>\r\n            ))}\r\n        </Dropdown>\r\n      }\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomSelect;"]},"metadata":{},"sourceType":"module"}