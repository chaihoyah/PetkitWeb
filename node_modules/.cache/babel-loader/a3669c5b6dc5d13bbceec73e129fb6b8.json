{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaih\\\\Desktop\\\\petkitweb\\\\src\\\\pages\\\\components\\\\custom-select.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomSelect(props) {\n  _s();\n\n  const options = props.options;\n  const [value, setValue] = useState(props.value);\n  const [isOpened, setIsOpened] = useState(false);\n  const strActiveStar = [];\n  const strUnactiveStar = [];\n\n  function set(str) {\n    setValue(str);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      background: \"red\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setIsOpened(!isOpened);\n      },\n      children: \"\\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), isOpened && /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: options.map((state, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => {\n            setValue(state.value);\n            console.log(value);\n          },\n          children: state.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomSelect, \"fCvNXd72617m72icWQ4r59KZeyM=\");\n\n_c = CustomSelect;\nexport default CustomSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelect\");","map":{"version":3,"sources":["C:/Users/chaih/Desktop/petkitweb/src/pages/components/custom-select.js"],"names":["Button","Dropdown","useState","CustomSelect","props","options","value","setValue","isOpened","setIsOpened","strActiveStar","strUnactiveStar","set","str","width","height","background","display","flexDirection","position","map","state","index","console","log","label"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,iBAAjC;AACA,SAASC,QAAT,QAAwB,OAAxB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACE,KAAK,CAACE,KAAP,CAAlC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMQ,aAAa,GAAG,EAAtB;AACA,QAAMC,eAAe,GAAG,EAAxB;;AAEA,WAASC,GAAT,CAAaC,GAAb,EAAiB;AACfN,IAAAA,QAAQ,CAACM,GAAD,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,MAAM,EAAE,MAAxB;AAAgCC,MAAAA,UAAU,EAAE,KAA5C;AAAmDC,MAAAA,OAAO,EAAC,MAA3D;AAAmEC,MAAAA,aAAa,EAAC,QAAjF;AAA2FC,MAAAA,QAAQ,EAAC;AAApG,KAAZ;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACV,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAAuB,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEIA,QAAD,iBACC,QAAC,QAAD;AAAA,gBACKH,OAAO,CAACe,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACT;AAAA,+BACI,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,OAAO,EAAE,MAAM;AAACf,YAAAA,QAAQ,CAACc,KAAK,CAACf,KAAP,CAAR;AAAuBiB,YAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AAAmB,WAAzE;AAAA,oBACKe,KAAK,CAACI;AADX;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUH,KAAV;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA5BQnB,Y;;KAAAA,Y;AA8BT,eAAeA,YAAf","sourcesContent":["import { Button, Dropdown } from \"react-bootstrap\";\r\nimport { useState} from \"react\";\r\n\r\nfunction CustomSelect(props) {\r\n  const options = props.options;\r\n  const [value, setValue] = useState(props.value);\r\n  const [isOpened, setIsOpened] = useState(false);\r\n\r\n  const strActiveStar = [];\r\n  const strUnactiveStar = [];\r\n\r\n  function set(str){\r\n    setValue(str);\r\n  }\r\n\r\n  return (\r\n    <div style={{width: \"100%\", height: \"100%\", background: \"red\", display:\"flex\", flexDirection:\"column\", position:\"relative\"}}>\r\n      <Button onClick={() => {setIsOpened(!isOpened)}}>버튼</Button>\r\n      {(isOpened) &&\r\n        <Dropdown>\r\n            {options.map((state, index) => (\r\n                <div key={index}>\r\n                    <Dropdown.Item onClick={() => {setValue(state.value); console.log(value)}}>\r\n                        {state.label}\r\n                    </Dropdown.Item>\r\n                </div>\r\n            ))}\r\n        </Dropdown>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomSelect;"]},"metadata":{},"sourceType":"module"}