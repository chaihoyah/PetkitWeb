{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaih\\\\Desktop\\\\petkitweb\\\\src\\\\pages\\\\user\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Navigation from \"../components/navigation\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport axios from 'axios';\nimport \"./user.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const navigate = useNavigate();\n  const naverRef = useRef();\n  const location = useLocation();\n  const [showMethod, setShowMethod] = useState(false); // ID로 먼저 회원 여부 check -> 없으면 전화번호 입력으로 -> 전화번호 입력시 다시 회원정보 check (signup에 넘기는 type, 이미 가입한 계정 type 같을때만 id값 바꾸는걸로 처리해주기)\n  //네이버 로긴 관련\n\n  const initializeNaverLogin = () => {\n    const naverLogin = new window.naver.LoginWithNaverId({\n      clientId: process.env.REACT_APP_NAVER_LOGIN_CLIENTID,\n      callbackUrl: \"http://localhost:3000/login\",\n      isPopup: false,\n      loginButton: {\n        color: \"green\",\n        type: 3,\n        height: 55\n      }\n    });\n    naverLogin.init();\n    naverLogin.logout();\n  };\n\n  const url = \"https://openapi.naver.com/v1/nid/me\";\n\n  const getNaverToken = () => {\n    /*    if (!location.hash) return;\n        const token = location.hash.split('=')[1].split('&')[0];\n        const type = location.hash.split('=')[3].split('&')[0];\n        const header = type + \" \" + token;\n        axios.get(process.env.REACT_APP_NAVER_USERLOOKUP_URL, {\n            headers: {\n                'Authorization': header,\n            }\n        }).then((res) => {\n            console.log(res);\n            let id = res.data.response.id;\n            //서버에 id 있는지 확인\n            console.log(id);\n            if (id === \"4V2gUbqcgYGgtKyA7nrlVSOVsxfnbu41YXH_VdasDQQ\") navigate('/', {replace: true, state:{isLoggedIn:true, user:{id: id, u_id: -1, u_name:\"신채호\", phone:\"01027803084\", alarm:true, u_gender:true, u_birth:\"19960103\", main_pet:0}}});\n            else{\n                navigate('/signup', {state:{type: \"Naver\"}})\n            }\n        });*/\n  };\n\n  const handleNaverClick = () => {\n    naverRef.current.children[0].click();\n  };\n\n  const naverGet = () => {\n    axios.get(process.env.REACT_APP_NAVER_USERLOOKUP_URL, {\n      params: {\n        client_id: process.env.REACT_APP_NAVER_LOGIN_CLIENTID,\n        redirect_uri: \"http://localhost:3000/login\",\n        response_type: \"code\"\n      }\n    }).then(res => {\n      console.log(res);\n      /*        ReactDOM.render(\n                  res.data,\n                  document.getElementById(\"root\")\n              );*/\n    });\n  }; // 카카오 로긴 관련\n\n\n  function kakaoLogin() {\n    window.Kakao.Auth.login({\n      success: function (response) {\n        window.Kakao.API.request({\n          url: '/v2/user/me',\n          success: function (response) {\n            console.log(response);\n            if (response.id === 2037457098) navigate('/', {\n              replace: true,\n              state: {\n                id: response.id\n              }\n            });else navigate('/signup', {\n              state: {\n                type: \"Kakao\"\n              }\n            });\n          },\n          fail: function (error) {\n            console.log(error);\n          }\n        });\n      },\n      fail: function (error) {\n        console.log(error);\n      }\n    });\n  }\n\n  function kakaoLogout() {\n    if (window.Kakao.Auth.getAccessToken()) {\n      window.Kakao.API.request({\n        url: '/v1/user/unlink',\n        success: function (response) {\n          console.log(response);\n        },\n        fail: function (error) {\n          console.log(error);\n        }\n      });\n      window.Kakao.Auth.setAccessToken(undefined);\n    }\n  } // 페이스북 로긴 관련\n\n\n  const responseFacebook = response => {\n    console.log(response);\n    if (response.id === \"4064402136993700\") navigate('/', {\n      replace: true,\n      state: {\n        id: response.id\n      }\n    });else navigate('/signup', {\n      state: {\n        type: \"Facebook\"\n      }\n    });\n  };\n\n  useEffect(() => {\n    initializeNaverLogin();\n    if (!window.Kakao.isInitialized()) window.Kakao.init(process.env.REACT_APP_KAKAO_KEY);\n    getNaverToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      title: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrap\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-inside d-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              ref: naverRef,\n              id: \"naverIdLogin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"naver\",\n              onClick: () => naverGet(),\n              children: \"\\uB124\\uC774\\uBC84\\uB85C \\uC2DC\\uC791\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), !showMethod && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"kakao\",\n              onClick: () => setShowMethod(true),\n              children: \"\\uB2E4\\uB978 \\uB85C\\uADF8\\uC778 \\uC218\\uB2E8 \\uBCF4\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), showMethod && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"kakao\",\n                className: \"btn-kakao-real\",\n                onClick: () => kakaoLogin(),\n                children: \"\\uCE74\\uCE74\\uC624\\uB85C \\uB85C\\uADF8\\uC778\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FacebookLogin, {\n                appId: process.env.REACT_APP_FB_APPID,\n                autoLoad: false,\n                fields: \"name, email, picture\",\n                callback: responseFacebook,\n                render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"facebook\",\n                  onClick: renderProps.onClick,\n                  children: \"\\uD398\\uC774\\uC2A4\\uBD81\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              id: \"login-input\",\n              label: \"\\uC790\\uB3D9 \\uB85C\\uADF8\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"e8vbYoKxhEpRNuwlvTcHs2L2M5c=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/chaih/Desktop/petkitweb/src/pages/user/login.js"],"names":["useState","useEffect","useRef","ReactDOM","Navigation","useNavigate","useLocation","Row","Col","Button","Form","FacebookLogin","axios","Login","navigate","naverRef","location","showMethod","setShowMethod","initializeNaverLogin","naverLogin","window","naver","LoginWithNaverId","clientId","process","env","REACT_APP_NAVER_LOGIN_CLIENTID","callbackUrl","isPopup","loginButton","color","type","height","init","logout","url","getNaverToken","handleNaverClick","current","children","click","naverGet","get","REACT_APP_NAVER_USERLOOKUP_URL","params","client_id","redirect_uri","response_type","then","res","console","log","kakaoLogin","Kakao","Auth","login","success","response","API","request","id","replace","state","fail","error","kakaoLogout","getAccessToken","setAccessToken","undefined","responseFacebook","isInitialized","REACT_APP_KAKAO_KEY","REACT_APP_FB_APPID","renderProps","onClick"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef} from \"react\";\nimport ReactDOM from 'react-dom';\nimport Navigation from \"../components/navigation\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport axios from 'axios';\n\nimport \"./user.css\";\n\nfunction Login() {\n  const navigate = useNavigate();\n  const naverRef = useRef();\n  const location = useLocation();\n  const [showMethod, setShowMethod] = useState(false);\n\n  // ID로 먼저 회원 여부 check -> 없으면 전화번호 입력으로 -> 전화번호 입력시 다시 회원정보 check (signup에 넘기는 type, 이미 가입한 계정 type 같을때만 id값 바꾸는걸로 처리해주기)\n  //네이버 로긴 관련\n  const initializeNaverLogin = () => {\n    const naverLogin = new window.naver.LoginWithNaverId({\n        clientId: process.env.REACT_APP_NAVER_LOGIN_CLIENTID,\n        callbackUrl: \"http://localhost:3000/login\",\n        isPopup: false,\n        loginButton: {\n            color: \"green\",\n            type: 3,\n            height: 55,\n        }\n    });\n    naverLogin.init();\n    naverLogin.logout();\n  };\n\n  const url = \"https://openapi.naver.com/v1/nid/me\";\n\n  const getNaverToken = () => {\n\n/*    if (!location.hash) return;\n    const token = location.hash.split('=')[1].split('&')[0];\n    const type = location.hash.split('=')[3].split('&')[0];\n    const header = type + \" \" + token;\n    axios.get(process.env.REACT_APP_NAVER_USERLOOKUP_URL, {\n        headers: {\n            'Authorization': header,\n        }\n    }).then((res) => {\n        console.log(res);\n        let id = res.data.response.id;\n        //서버에 id 있는지 확인\n        console.log(id);\n        if (id === \"4V2gUbqcgYGgtKyA7nrlVSOVsxfnbu41YXH_VdasDQQ\") navigate('/', {replace: true, state:{isLoggedIn:true, user:{id: id, u_id: -1, u_name:\"신채호\", phone:\"01027803084\", alarm:true, u_gender:true, u_birth:\"19960103\", main_pet:0}}});\n        else{\n            navigate('/signup', {state:{type: \"Naver\"}})\n        }\n    });*/\n\n  };\n\n  const handleNaverClick = () => {\n    naverRef.current.children[0].click();\n  };\n\n  const naverGet = () => {\n    axios.get(process.env.REACT_APP_NAVER_USERLOOKUP_URL, {\n        params:{\n            client_id:process.env.REACT_APP_NAVER_LOGIN_CLIENTID,\n            redirect_uri:\"http://localhost:3000/login\",\n            response_type:\"code\"\n        }\n    }).then((res) => {\n        console.log(res);\n/*        ReactDOM.render(\n            res.data,\n            document.getElementById(\"root\")\n        );*/\n    });\n  };\n\n  // 카카오 로긴 관련\n\n  function kakaoLogin(){\n    window.Kakao.Auth.login({\n        success: function (response) {\n            window.Kakao.API.request({\n                url: '/v2/user/me',\n                success: function (response) {\n                    console.log(response);\n                    if(response.id === 2037457098) navigate('/', {replace: true, state:{id: response.id}});\n                    else navigate('/signup', {state:{type: \"Kakao\"}});\n                },\n                fail: function (error) {\n                    console.log(error);\n                },\n            })\n        },\n        fail: function (error) {\n            console.log(error)\n        },\n    });\n  }\n\n  function kakaoLogout() {\n      if (window.Kakao.Auth.getAccessToken()) {\n        window.Kakao.API.request({\n          url: '/v1/user/unlink',\n          success: function (response) {\n          \tconsole.log(response)\n          },\n          fail: function (error) {\n            console.log(error)\n          },\n        })\n        window.Kakao.Auth.setAccessToken(undefined)\n      }\n  }\n\n  // 페이스북 로긴 관련\n\n  const responseFacebook = (response) => {\n    console.log(response);\n    if (response.id === \"4064402136993700\") navigate('/', {replace: true, state:{id: response.id}});\n    else navigate('/signup', {state:{type: \"Facebook\"}});\n  };\n\n  useEffect(() => {\n    initializeNaverLogin();\n    if (!window.Kakao.isInitialized())  window.Kakao.init(process.env.REACT_APP_KAKAO_KEY);\n    getNaverToken();\n  }, []);\n\n  return (\n    <>\n      <Navigation title=\"로그인\" />\n      <div className=\"login-wrap\">\n        <Row>\n          <Col xs={12}>\n            <div className=\"login-inside d-grid\">\n            <div ref={naverRef} id='naverIdLogin'></div>\n              <Button variant=\"naver\" onClick={() => naverGet()}>네이버로 시작하기</Button>\n              {!showMethod && \n              <Button variant=\"kakao\" onClick={() => setShowMethod(true)}>다른 로그인 수단 보기</Button>\n              }\n\n              {showMethod && <>\n              <Button variant=\"kakao\" className=\"btn-kakao-real\" onClick={() => kakaoLogin()}>카카오로 로그인</Button>\n              <FacebookLogin\n                    appId= {process.env.REACT_APP_FB_APPID}\n                    autoLoad={false}\n                    fields=\"name, email, picture\"\n                    callback={responseFacebook}\n                    render={(renderProps) => (\n                        <Button variant=\"facebook\" onClick={renderProps.onClick}>페이스북으로 로그인</Button>\n                    )}\n                ></FacebookLogin>\n              </>\n              }\n\n              <Form.Check type=\"checkbox\" id=\"login-input\"label=\"자동 로그인\" />\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}